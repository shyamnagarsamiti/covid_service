{"version":3,"sources":["App.js","reportWebVitals.js","components/BookingForm.js","index.js"],"names":["useStyles","makeStyles","root","maxWidth","media","height","App","classes","style","alignItems","flexDirection","alignContent","backgroundColor","display","justifyContent","width","color","fontSize","textAlign","Button","variant","href","paddingLeft","Grid","container","spacing","item","xs","sm","Card","className","CardMedia","image","title","CardContent","Typography","gutterBottom","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","Yup","id","required","idNumber","name","slot","sampleMode","dob","nullable","emailID","email","label","wardNumber","positive","integer","min","max","mobileNumber","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8RAIMA,EAAYC,YAAW,CACzBC,KAAM,CACJC,SAAU,KAEZC,MAAO,CACLC,OAAQ,OAkECC,MA9Df,WACI,IAAMC,EAAUP,IAEhB,OACI,qCACI,sBAAKQ,MAAO,CAACC,WAAW,SAAUC,cAAc,SAAUC,aAAa,gBAAiBC,gBAAiB,WAAYP,OAAQ,OAAQQ,QAAQ,OAAQC,eAAe,SAAUC,MAAO,SAArL,UACI,oBAAIP,MAAO,CAACQ,MAAM,QAASC,SAAS,MAAOC,UAAU,UAArD,0DAGA,cAACC,EAAA,EAAD,CAAQC,QAAQ,YAAYC,KAAK,kBAAjC,yBAEJ,sBAAKb,MAAO,CAACc,YAAa,OAA1B,UACI,wDACA,eAACC,EAAA,EAAD,CAAMC,WAAS,EAACC,QAAS,EAAzB,UACI,cAACF,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAvB,SACI,eAACC,EAAA,EAAD,CAAMC,UAAWvB,EAAQL,KAAzB,UACI,cAAC6B,EAAA,EAAD,CACAD,UAAWvB,EAAQH,MACnB4B,MAAM,sFACNC,MAAM,0BAEN,cAACC,EAAA,EAAD,UACI,cAACC,EAAA,EAAD,CAAYC,cAAY,EAAChB,QAAQ,KAAKiB,UAAU,KAAhD,gCAMZ,cAACd,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAvB,SACI,eAACC,EAAA,EAAD,CAAMC,UAAWvB,EAAQL,KAAzB,UACI,cAAC6B,EAAA,EAAD,CACAD,UAAWvB,EAAQH,MACnB4B,MAAM,gMACNC,MAAM,0BAEN,cAACC,EAAA,EAAD,UACI,cAACC,EAAA,EAAD,CAAYC,cAAY,EAAChB,QAAQ,KAAKiB,UAAU,KAAhD,gCAMZ,cAACd,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAvB,SACI,eAACC,EAAA,EAAD,CAAMC,UAAWvB,EAAQL,KAAzB,UACI,cAAC6B,EAAA,EAAD,CACAD,UAAWvB,EAAQH,MACnB4B,MAAM,sHACNC,MAAM,0BAEN,cAACC,EAAA,EAAD,UACI,cAACC,EAAA,EAAD,CAAYC,cAAY,EAAChB,QAAQ,KAAKiB,UAAU,KAAhD,qCCnDjBC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,0CC2BWQ,IAAW,CAChCC,GAAID,MAAaE,SAAS,YAC1BC,SAAUH,MAAaE,SAAS,YAChCE,KAAMJ,MAAaE,SAAS,YAC5BG,KAAML,MAAaE,SAAS,YAC5BI,WAAYN,MAAaE,SAAS,YAClCK,IAAKP,MAAWE,SAAS,YAAYM,WACrCC,QAAST,MAAaU,MAAM,wBAAwBR,SAAS,YAAYS,MAAM,WAC/EC,WAAYZ,MAAaa,WAAWC,UAAUC,IAAI,IAAIC,IAAI,KAAKd,SAAS,YACxEe,aAAcjB,MAAaa,WAAWC,UAAUC,IAAI,YAAYC,IAAI,YAAYd,SAAS,cCpC7FgB,IAASC,OACP,cAAC,IAAMC,WAAP,UAGI,cAAC,EAAD,MAGJC,SAASC,eAAe,SAM1B/B,M","file":"static/js/main.fee94598.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from \"axios\";\nimport { Container, Grid, Paper, Typography, Card, CardMedia, CardContent, makeStyles, Button } from \"@material-ui/core\";\n\nconst useStyles = makeStyles({\n    root: {\n      maxWidth: 345,\n    },\n    media: {\n      height: 140,\n    },\n  });\n\nfunction App() {\n    const classes = useStyles();\n\n    return (\n        <>\n            <div style={{alignItems:\"center\", flexDirection:\"column\", alignContent:\"space-between\", backgroundColor: \"darkBlue\", height: \"50vh\", display:\"flex\", justifyContent:\"center\", width: \"100vw\"}}>\n                <h1 style={{color:\"white\", fontSize:\"2em\", textAlign:\"center\"}}>\n                    SHYAM NAGAR VIKAS SAMITI COVID HELP SERVICES\n                </h1>\n                <Button variant=\"contained\" href=\"./pages/Form.js\">BOOK NOW</Button>                    \n            </div>\n            <div style={{paddingLeft: \"2em\"}}>\n                <h3>Services offered like:</h3>\n                <Grid container spacing={3}>\n                    <Grid item xs={12} sm={4}>\n                        <Card className={classes.root}>\n                            <CardMedia\n                            className={classes.media}\n                            image=\"https://images.cnbctv18.com/wp-content/uploads/2021/02/COVID19test_swab-768x432.jpg\"\n                            title=\"Contemplative Reptile\"\n                            />\n                            <CardContent>\n                                <Typography gutterBottom variant=\"h5\" component=\"h2\">\n                                    RT-PCR TEST\n                                </Typography>\n                            </CardContent>\n                        </Card>\n                    </Grid>\n                    <Grid item xs={12} sm={4}>\n                        <Card className={classes.root}>\n                            <CardMedia\n                            className={classes.media}\n                            image=\"https://wwwassets.rand.org/content/rand/blog/2020/08/its-going-to-be-the-vaccination-stupid/jcr:content/par/blogpost.aspectcrop.868x455.lt.jpg/x1598055738172.jpg.pagespeed.ic.WPm0htSOxE.jpg\"\n                            title=\"Contemplative Reptile\"\n                            />\n                            <CardContent>\n                                <Typography gutterBottom variant=\"h5\" component=\"h2\">\n                                    VACCINATION\n                                </Typography>\n                            </CardContent>\n                        </Card>\n                    </Grid>\n                    <Grid item xs={12} sm={4}>\n                        <Card className={classes.root}>\n                            <CardMedia\n                            className={classes.media}\n                            image=\"https://www.sheppardhealthlaw.com/wp-content/uploads/sites/25/2020/11/Global-Trade-Blog-Image_Covid-2-660x283-1.png\"\n                            title=\"Contemplative Reptile\"\n                            />\n                            <CardContent>\n                                <Typography gutterBottom variant=\"h5\" component=\"h2\">\n                                    OTHERS\n                                </Typography>\n                            </CardContent>\n                        </Card>\n                    </Grid>\n                </Grid>\n            </div>\n        </>\n    )\n}\n\nexport default App\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\r\nimport { ErrorMessage, Field, Formik, Form } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport DateView from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\n\r\nimport \"../App.css\";\r\n\r\nconst initialValues = {\r\n    name: \"\",\r\n    idNumber: \"\",\r\n    sampleMode: \"\",\r\n    slot: \"\",\r\n    id: \"\",\r\n    mobileNumber: +91,\r\n    gender: \"\",\r\n    address: \"\",\r\n    emailID: \"\",\r\n    dob: null,\r\n    wardNumber: \"\",\r\n    nagarNigam: \"\",\r\n};\r\nconst onSubmit = (values, onSubmitProps) => {\r\n    console.log(values);\r\n    onSubmitProps.resetForm();\r\n    alert(\"Form Submitted\");\r\n};\r\n// const validate = values => {\r\n//     let errors = {};\r\n//     if (!values.name) errors.name = \"Required\";\r\n//     if (!values.idNumber) errors.idNumber = \"Required\";\r\n//     if (!values.id) errors.id =  \"Required\";\r\n//     return errors;\r\n// };\r\nconst validationSchema = Yup.object({\r\n    id: Yup.string().required(\"Required\"),\r\n    idNumber: Yup.string().required(\"Required\"),\r\n    name: Yup.string().required(\"Required\"),\r\n    slot: Yup.string().required(\"Required\"),\r\n    sampleMode: Yup.string().required(\"Required\"),\r\n    dob: Yup.date().required(\"Required\").nullable(),\r\n    emailID: Yup.string().email(\"Invalid email format\").required(\"Required\").label(\"emailID\"),\r\n    wardNumber: Yup.number().positive().integer().min(10).max(999).required(\"Required\"),\r\n    mobileNumber: Yup.number().positive().integer().min(1111111111).max(9999999999).required(\"Required\")\r\n});\r\nconst sampleOptions = [\r\n    {key: \"Home Collection (Only for individuals aged 65yrs & above)\", value: \"home\"},\r\n    {key: \"Drive-in\", value: \"drive\"}\r\n];\r\nconst idOptions = [\r\n    {key: \"Aadhar Card\", value: \"aadhar\"},\r\n    {key: \"Passport\", value: \"passport\"}\r\n];\r\nconst genderOptions = [\r\n    {key: \"MALE\", value: \"male\"},\r\n    {key: \"FEMALE\", value: \"female\"},\r\n    {key: \"OTHERS\", value: \"other\"}\r\n]\r\nconst nnOptions = [\r\n    {key: \"Heritage, Jaipur\", value: \"heritage\"},\r\n    {key: \"Greater, Jaipur\", value: \"greater\"}\r\n]\r\n\r\nfunction BookingForm() {\r\n\r\n    return (\r\n        <Formik className=\"Apps\" initialValues={initialValues} validationSchema={validationSchema} onSubmit={onSubmit}>\r\n            {formik => (\r\n                <Form>\r\n                    <div className=\"form-control\">\r\n                        <label>Mode of Sample Collection:</label>\r\n                        <Field name=\"sampleMode\">\r\n                            {({field}) => {\r\n                                return sampleOptions.map(option => (\r\n                                    <>\r\n                                        <input type=\"radio\" id={option.value} {...field} value={option.value} checked={field.value === option.value} />\r\n                                        <label>{option.key}</label>\r\n                                    </>\r\n                                ))\r\n                            }}\r\n                        </Field>\r\n                        <ErrorMessage name=\"sampleMode\" />\r\n                    </div>\r\n                    <div className=\"form-control\">\r\n                        <label>Slot Availability:</label>\r\n                        Available for the next day-\r\n                        <Field as=\"select\" id=\"slot\" name=\"slot\">\r\n                            <option value=\"\">Select an option</option>\r\n                            <option value=\"10-10.3\">10:00 - 10:30</option>\r\n                            <option value=\"12-12.3\">12:00 - 12:30</option>\r\n                            <option value=\"13-13.3\">13:00 - 13:30</option>\r\n                            <option value=\"14-14.3\">14:00 - 14:30</option>\r\n                            <option value=\"15-15.3\">15:00 - 15:30</option>\r\n                        </Field>\r\n                        <ErrorMessage name=\"slot\" />\r\n                    </div>\r\n                    <div className=\"form-control\">\r\n                        <label>\r\n                            ID Proof:\r\n                        </label>\r\n                        <Field name=\"id\">\r\n                            {({field}) => {\r\n                                return idOptions.map(option => (\r\n                                    <>\r\n                                        <input type=\"radio\" id={option.value} {...field} value={option.value} checked={field.value === option.value} />\r\n                                        <label>{option.key}</label>\r\n                                    </>\r\n                                ))\r\n                            }}\r\n                        </Field>\r\n                        <ErrorMessage name=\"id\" />\r\n                    </div>\r\n                    <div className=\"form-control\">\r\n                        <label>\r\n                            ID Proof Number:\r\n                        </label>\r\n                        <Field type=\"text\" id=\"idNumber\" name=\"idNumber\" />\r\n                        <ErrorMessage name=\"idNumber\" />\r\n                    </div>\r\n                    <div className=\"form-control\">\r\n                        <label>\r\n                            Name as per the ID Proof:\r\n                        </label>\r\n                        <Field type=\"text\" id=\"name\" name=\"name\" />\r\n                        <ErrorMessage name=\"name\" />\r\n                    </div>\r\n                    <div className=\"form-control\">\r\n                        <label>Date of Birth:</label>\r\n                        <Field name=\"dob\">\r\n                            {({field, form}) => (\r\n                                <DateView id=\"dob\" placeholderText=\"Click to select a date\" maxDate={new Date()} showYearDropdown dropdownMode=\"scroll\" {...field} selected={field.value} onChange={val => form.setFieldValue(\"dob\", val)} />\r\n                            )}\r\n                        </Field>\r\n                        <ErrorMessage name=\"dob\" />\r\n                    </div>\r\n                    <div className=\"form-control\">\r\n                        <label>Gender:</label>\r\n                        <Field name=\"gender\">\r\n                            {({field}) => {\r\n                                return genderOptions.map(option => (\r\n                                    <>\r\n                                        <input type=\"radio\" id={option.value} {...field} value={option.value} checked={field.value === option.value} />\r\n                                        <label>{option.key}</label>\r\n                                    </>\r\n                                ))\r\n                            }}\r\n                        </Field>\r\n                        <ErrorMessage name=\"gender\" />\r\n                    </div>\r\n                    <div className=\"form-control\">\r\n                        <label>Mobile Number:</label>\r\n                        <Field type=\"tel\" minlength={10} id=\"mobileNumber\" name=\"mobileNumber\" />\r\n                        <ErrorMessage name=\"mobileNumber\" />\r\n                    </div>\r\n                    <div className=\"form-control\">\r\n                        <label>Address:</label>\r\n                    </div>\r\n                    <div className=\"form-control\">\r\n                        <label>Ward Number:</label>\r\n                        <Field type=\"number\" id=\"wardNumber\" name=\"wardNumber\" />\r\n                        <ErrorMessage name=\"wardNumber\" />\r\n                    </div>\r\n                    <div className=\"form-control\">\r\n                        <label>Nagar Nigam:</label>\r\n                        <Field name=\"nagarNigam\">\r\n                            {({field}) => {\r\n                                return nnOptions.map(option => (\r\n                                    <>\r\n                                        <input type=\"radio\" id={option.value} {...field} value={option.value} checked={field.value === option.value} />\r\n                                        <label>{option.key}</label>\r\n                                    </>\r\n                                ))\r\n                            }}\r\n                        </Field>\r\n                        <ErrorMessage name=\"nagarNigam\" />\r\n                    </div>\r\n                    <div className=\"form-control\">\r\n                        <label>Email ID:</label>\r\n                        <Field type=\"email\" id=\"emailID\" name=\"emailID\" />\r\n                        <ErrorMessage name=\"emailID\" />\r\n                    </div>\r\n                    <button type=\"submit\">Submit</button>\r\n                </Form>\r\n            )}\r\n        </Formik>\r\n    )\r\n}\r\n\r\nexport default BookingForm\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport BookingForm from './components/BookingForm';\n\nReactDOM.render(\n  <React.StrictMode>\n    {/* <div className=\"App\"> */}\n      {/* <BookingForm /> */}\n      <App />\n    {/* </div> */}\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}