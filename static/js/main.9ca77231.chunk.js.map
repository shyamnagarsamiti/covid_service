{"version":3,"sources":["components/BookingForm.js","Home.js","reportWebVitals.js","index.js"],"names":["Yup","id","required","idNumber","when","is","then","matches","otherwise","name","slot","gender","nagarNigam","house","lane","colony","city","sampleMode","dob","nullable","emailID","email","wardNumber","positive","integer","min","max","mobileNumber","test","val","toString","length","makeStyles","theme","paper","display","flexDirection","padding","avatar","margin","spacing","backgroundColor","palette","secondary","main","form","width","marginTop","submit","BookingForm","useStyles","root","maxWidth","media","height","Home","classes","useState","style","alignItems","alignContent","justifyContent","color","fontSize","textAlign","Button","variant","href","paddingLeft","Grid","container","item","xs","sm","Card","className","CardMedia","image","title","CardContent","Typography","gutterBottom","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9ca77231.chunk.js","sourcesContent":["import React from 'react';\r\nimport {Box, Button, FormControl, FormControlLabel, InputAdornment, InputLabel, makeStyles, MenuItem, Radio} from \"@material-ui/core\"\r\nimport { ErrorMessage, Field, Formik, Form } from \"formik\";\r\nimport {RadioGroup, Select, TextField} from \"formik-material-ui\";\r\nimport {AccountCircle, EmailRounded, EventRounded, HomeRounded, PhoneRounded} from \"@material-ui/icons\";\r\nimport {DatePicker} from \"formik-material-ui-pickers\";\r\nimport * as Yup from \"yup\";\r\nimport DateView from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\n\r\nimport \"../App.css\";\r\nimport TextError from \"./TextError\";\r\n\r\nconst initialValues = {\r\n    name: \"\",\r\n    idNumber: \"\",\r\n    sampleMode: \"\",\r\n    slot: \"\",\r\n    id: \"\",\r\n    mobileNumber: \"\",\r\n    gender: \"\",\r\n    address: \"\",\r\n    emailID: \"\",\r\n    dob: null,\r\n    age: 0,\r\n    wardNumber: \"\",\r\n    nagarNigam: \"\",\r\n    location: \"\",\r\n};\r\nconst onSubmit = (values, onSubmitProps) => {\r\n    // getLocation();\r\n    console.log(values);\r\n    onSubmitProps.resetForm();\r\n    alert(\"Form Submitted\");\r\n};\r\n// const validate = values => {\r\n//     let errors = {};\r\n//     if (!values.name) errors.name = \"Required\";\r\n//     if (!values.idNumber) errors.idNumber = \"Required\";\r\n//     if (!values.id) errors.id =  \"Required\";\r\n//     return errors;\r\n// };\r\nconst validationSchema = Yup.object({\r\n    id: Yup.string().required(\"Required\"),\r\n    idNumber: Yup.string().required(\"Required\").when(\"id\", {\r\n        is: \"aadhar\",\r\n        then: Yup.string().matches(/^[2-9]{1}[0-9]{3}\\s?[0-9]{4}\\s?[0-9]{4}$/, \"Must be 12 digits\"),\r\n        otherwise: Yup.string().matches(/^[A-PR-WYa-pr-wy][1-9]\\d\\s?\\d{4}[1-9]$/, \"Invalid format\")\r\n    }),\r\n    name: Yup.string().required(\"Required\"),\r\n    slot: Yup.string().required(\"Required\"),\r\n    gender: Yup.string().required(\"Required\"),\r\n    nagarNigam: Yup.string().required(\"Required\"),\r\n    house: Yup.string().required(\"Required\"),\r\n    lane: Yup.string().required(\"Required\"),\r\n    colony: Yup.string().required(\"Required\"),\r\n    city: Yup.string().required(\"Required\"),\r\n    sampleMode: Yup.string().required(\"Required\"),\r\n    dob: Yup.date().required(\"Required\").nullable(),\r\n    emailID: Yup.string().email(\"Invalid email format\").required(\"Required\"),\r\n    wardNumber: Yup.number().positive().integer().min(10).max(999),\r\n    mobileNumber: Yup.number().required(\"Required\").test(\"len\", \"Must be 10 digits\", val => val && val.toString().length === 10)\r\n});\r\nconst sampleOptions = [\r\n    {key: \"Home Collection\", value: \"home\"},\r\n    {key: \"Drive-in\", value: \"drive\"}\r\n];\r\nconst idOptions = [\r\n    {key: \"Aadhar Card\", value: \"aadhar\"},\r\n    {key: \"Passport\", value: \"passport\"}\r\n];\r\nconst genderOptions = [\r\n    {key: \"MALE\", value: \"male\"},\r\n    {key: \"FEMALE\", value: \"female\"},\r\n    {key: \"OTHERS\", value: \"other\"}\r\n]\r\nconst nnOptions = [\r\n    {key: \"Heritage, Jaipur\", value: \"heritage\"},\r\n    {key: \"Greater, Jaipur\", value: \"greater\"}\r\n]\r\n\r\nfunction getLocation() {\r\n    if (navigator.geolocation) {\r\n      navigator.geolocation.watchPosition(showPosition);\r\n    } else { \r\n      initialValues.location = \"Geolocation is not supported by this browser.\";\r\n    }\r\n  }\r\n      \r\nfunction showPosition(position) {\r\n    initialValues.location =\"Latitude: \" + position.coords.latitude + \r\n    \"Longitude: \" + position.coords.longitude;\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    paper: {\r\n    //   marginTop: theme.spacing(8),\r\n      display: 'flex',\r\n      flexDirection: 'column',\r\n    //   alignItems: 'center',\r\n      padding: \"0 16px\"\r\n    },\r\n    avatar: {\r\n      margin: theme.spacing(1),\r\n      backgroundColor: theme.palette.secondary.main,\r\n    },\r\n    form: {\r\n      width: '100%', // Fix IE 11 issue.\r\n      marginTop: theme.spacing(3),\r\n    },\r\n    submit: {\r\n      margin: theme.spacing(3, 0, 2),\r\n    },\r\n  }));\r\n\r\n// function getLocation() {\r\n//     function success(position) {\r\n//         const latitude  = position.coords.latitude;\r\n//         const longitude = position.coords.longitude;\r\n//         var mapLink = `Latitude: ${latitude} °, Longitude: ${longitude} °`;\r\n//         return mapLink;\r\n//     }\r\n//     function error() {\r\n//         return \"User denied location permission\";\r\n//     }\r\n//     initialValues.location = navigator.geoLocation.getCurrentPosition(success, error);\r\n// };\r\n// if (window.navigator.geolocation) getLocation();\r\n\r\nfunction BookingForm({click}) {\r\n    const classes = useStyles();\r\n    \r\n    return (\r\n        <div className={classes.paper}>\r\n        <div style={{backgroundColor:\"#3f51b5\", color:\"white\"}}>\r\n            <h2>Please fill all the details</h2>\r\n        </div>\r\n        <Formik className={classes.form} initialValues={initialValues} validationSchema={validationSchema} onSubmit={onSubmit}>\r\n            {(formik) => (\r\n                <Form>\r\n                    {/* <Field component={DatePicker} label=\"label\" name=\"name\" /> */}\r\n                    <div className=\"form-control\">\r\n                        <label>Mode of Sample Collection:</label>\r\n                        <Field name=\"sampleMode\">\r\n                            {({field}) => {\r\n                                return sampleOptions.map(option => (\r\n                                    <FormControlLabel key={option.value} value={option.value} control={<Radio />} label={option.key} />\r\n                                    // <>\r\n                                    //     <input type=\"radio\" id={option.value} {...field} value={option.value} checked={field.value === option.value} />\r\n                                    //     <label>{option.key}</label>\r\n                                    // </>\r\n                                ))\r\n                            }}\r\n                        </Field>\r\n                        <div className=\"error\">\r\n                            {formik.values.age < 65 && formik.values.sampleMode === \"home\" ? formik.errors.sampleMode = \"Must be 65 years or above\" : \"\"}\r\n                        </div>\r\n                        <ErrorMessage component={TextError} name=\"sampleMode\" />\r\n                    </div>\r\n                    <div className=\"form-control\">\r\n                        <label>Slot Availability:</label>\r\n                        Available for the next day-\r\n                        <Field component={Select} name=\"slot\" inputProps={{id: \"slot\"}} >\r\n                            <MenuItem value=\"\">Pick a Slot</MenuItem>\r\n                            <MenuItem value=\"10-10.3\">10:00 - 10:30</MenuItem>\r\n                            <MenuItem value=\"12-12.3\">12:00 - 12:30</MenuItem>\r\n                            <MenuItem value=\"13-13.3\">13:00 - 13:30</MenuItem>\r\n                            <MenuItem value=\"14-14.3\">14:00 - 14:30</MenuItem>\r\n                            <MenuItem value=\"15-15.3\">15:00 - 15:30</MenuItem>\r\n                        </Field>\r\n                        <ErrorMessage component={TextError} name=\"slot\" />\r\n                    </div>\r\n                    <div className=\"form-control\">\r\n                        <label>\r\n                            ID Proof:\r\n                        </label>\r\n                        <Field component={TextField} name=\"id\">\r\n                            {({field}) => {\r\n                                return idOptions.map(option => (\r\n                                    <>\r\n                                            <input type=\"radio\" id={option.value} {...field} value={option.value} checked={field.value === option.value} />\r\n                                        <label>\r\n                                            {option.key}\r\n                                        </label>\r\n                                    </>\r\n                                ))\r\n                            }}\r\n                        </Field>\r\n                        <ErrorMessage component={TextError} name=\"id\" />\r\n                    </div>\r\n                    <div className=\"form-control rest\">\r\n                        <Field component={TextField} variant=\"outlined\" label=\"ID Proof Number\" name=\"idNumber\" />\r\n                    </div>\r\n                    <div className=\"form-control\">\r\n                        <Field component={TextField} InputProps={{\r\n                            startAdornment: (\r\n                            <InputAdornment position=\"start\">\r\n                                <AccountCircle color=\"primary\" />\r\n                            </InputAdornment>\r\n                            ),\r\n                        }} variant=\"outlined\" label=\"Name\" name=\"name\" />\r\n                    </div>\r\n                    <div className=\"form-control\">\r\n                        {/* <label>Date of Birth:</label> */}\r\n                        <Field name=\"dob\">\r\n                            {({field, form}) => (\r\n                                <DateView className=\"date rest\" placeholderText=\"Date of Birth\" maxDate={new Date()} showYearDropdown dropdownMode=\"select\" {...field} selected={field.value} onChange={val => {form.setFieldValue(\"dob\", val); form.setFieldValue(\"age\", ~~((Date.now() - +val) / 31557600000))}} />\r\n                            )}\r\n                        </Field>\r\n                        {console.log(formik, \"below date\")}\r\n                        <ErrorMessage component={TextError} name=\"dob\" />\r\n                    </div>\r\n                    <div className=\"form-control\">\r\n                        <label>Gender:</label>\r\n                        <Field component={TextField} name=\"gender\">\r\n                            {({field}) => {\r\n                                return genderOptions.map(option => (\r\n                                    <>\r\n                                        <input type=\"radio\" id={option.value} {...field} value={option.value} checked={field.value === option.value} />\r\n                                        <label>{option.key}</label>\r\n                                    </>\r\n                                ))\r\n                            }}\r\n                        </Field>\r\n                        <ErrorMessage component={TextError} name=\"gender\" />\r\n                    </div>\r\n                    <div className=\"form-control\">\r\n                        <Field className=\"num\" component={TextField} variant=\"outlined\" label=\"Mobile Number\" \r\n                            InputProps={{startAdornment: (<InputAdornment position=\"start\"><PhoneRounded color=\"primary\" />+91</InputAdornment>)\r\n                            }} type=\"number\" id=\"mobileNumber\" name=\"mobileNumber\" />\r\n                    </div>\r\n                    <div className=\"form-control\">\r\n                        <Field component={TextField} InputProps={{\r\n                            startAdornment: (\r\n                            <InputAdornment position=\"start\">\r\n                                <EmailRounded color=\"primary\" />\r\n                            </InputAdornment>\r\n                            ),\r\n                        }} label=\"Email ID\" type=\"email\" variant=\"outlined\" name=\"emailID\" />\r\n                    </div>\r\n                    <div className=\"form-control\">\r\n                        <label>Address:</label>\r\n                        <Field component={TextField} InputProps={{\r\n                            startAdornment: (\r\n                            <InputAdornment position=\"start\">\r\n                                <HomeRounded color=\"primary\" />\r\n                            </InputAdornment>\r\n                            ),\r\n                        }} variant=\"outlined\" placeholder=\"House Number\" name=\"house\" />\r\n                        <Field component={TextField} InputProps={{\r\n                            startAdornment: (\r\n                            <InputAdornment position=\"start\">\r\n                                <HomeRounded color=\"primary\" />\r\n                            </InputAdornment>\r\n                            ),\r\n                        }} variant=\"outlined\" placeholder=\"Lane\" name=\"lane\" />\r\n                        <Field component={TextField} InputProps={{\r\n                            startAdornment: (\r\n                            <InputAdornment position=\"start\">\r\n                                <HomeRounded color=\"primary\" />\r\n                            </InputAdornment>\r\n                            ),\r\n                        }} variant=\"outlined\" placeholder=\"Colony\" name=\"colony\" />\r\n                        <Field component={TextField} InputProps={{\r\n                            startAdornment: (\r\n                            <InputAdornment position=\"start\">\r\n                                <HomeRounded color=\"primary\" />\r\n                            </InputAdornment>\r\n                            ),\r\n                        }} variant=\"outlined\" placeholder=\"City with PIN Code\" name=\"city\" />\r\n                    </div>\r\n                    <div className=\"form-control\">\r\n                        <Field className=\"rest\" component={TextField} label=\"Ward Number\" variant=\"outlined\" type=\"number\" id=\"wardNumber\" name=\"wardNumber\" />\r\n                    </div>\r\n                    <div className=\"form-control\">\r\n                        <label>Nagar Nigam:</label>\r\n                        <Field component={TextField} name=\"nagarNigam\">\r\n                            {({field}) => {\r\n                                return nnOptions.map(option => (\r\n                                    <>\r\n                                        <input type=\"radio\" id={option.value} {...field} value={option.value} checked={field.value === option.value} />\r\n                                        <label>{option.key}</label>\r\n                                    </>\r\n                                ))\r\n                            }}\r\n                        </Field>\r\n                        <ErrorMessage component={TextError} name=\"nagarNigam\" />\r\n                    </div>\r\n                    <Button fullWidth variant=\"contained\" color=\"primary\" onClick={getLocation}>Send Location</Button>\r\n                    <Box margin={2}>\r\n                        <Button style={{marginRight: \"1em\"}} type=\"submit\" variant=\"contained\" color=\"primary\" disabled={!formik.isValid}>\r\n                            Submit\r\n                        </Button>\r\n                        <Button variant=\"contained\" color=\"primary\" onClick={click}>\r\n                            Go Back\r\n                        </Button>\r\n                    </Box>\r\n                </Form>\r\n            )}\r\n        </Formik>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default BookingForm\r\n","import React, { useState, useEffect } from 'react';\r\nimport axios from \"axios\";\r\nimport {Link} from \"react-router-dom\";\r\nimport { Box, Container, Grid, Paper, Typography, Card, CardMedia, CardContent, makeStyles, Button } from \"@material-ui/core\";\r\n\r\nimport BookingForm from \"./components/BookingForm\";\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n      maxWidth: 345,\r\n    },\r\n    media: {\r\n      height: 140,\r\n    },\r\n  });\r\n\r\nfunction Home() {\r\n    const classes = useStyles();\r\n    const [form, setForm] = useState(false);\r\n    const [loggedIn, setLoggedIn] = useState(true);\r\n\r\n    function handleClick() {\r\n        setForm(!form);\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div style={{backgroundColor:\"darkBlue\"}}>\r\n                {/* <Box color=\"white\" display=\"flex\" flexDirection=\"row-reverse\">\r\n                    <Button style={{margin: \"1em 2em 0 0\"}} variant=\"contained\" onClick={handleClick}>\r\n                        {loggedIn ? \"Dashboard\" : \"Log In\"}\r\n                    </Button>\r\n                </Box> */}\r\n                <div style={{alignItems:\"center\", flexDirection:\"column\", alignContent:\"space-between\", height: \"50vh\", display:\"flex\", justifyContent:\"center\", width: \"100vw\"}}>\r\n                    <h1 style={{color:\"white\", fontSize:\"2em\", textAlign:\"center\"}}>\r\n                        SHYAM NAGAR VIKAS SAMITI COVID HELP SERVICES\r\n                    </h1>\r\n                    {/* <Link to=\"/booking\">  */}\r\n                    <Button variant=\"contained\" href=\"https://sheltered-plains-50229.herokuapp.com/covid_service\" >BOOK NOW</Button>    \r\n                    {/* </Link> */}\r\n                </div>\r\n            </div>\r\n            <div style={{paddingLeft: \"2em\"}}>\r\n                <h3>Services offered like:</h3>\r\n                <Grid container spacing={3}>\r\n                    <Grid item xs={12} sm={4}>\r\n                        <Card className={classes.root}>\r\n                            <CardMedia\r\n                            className={classes.media}\r\n                            image=\"https://images.cnbctv18.com/wp-content/uploads/2021/02/COVID19test_swab-768x432.jpg\"\r\n                            title=\"Contemplative Reptile\"\r\n                            />\r\n                            <CardContent>\r\n                                <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n                                    RT-PCR TEST\r\n                                </Typography>\r\n                            </CardContent>\r\n                        </Card>\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={4}>\r\n                        <Card className={classes.root}>\r\n                            <CardMedia\r\n                            className={classes.media}\r\n                            image=\"https://wwwassets.rand.org/content/rand/blog/2020/08/its-going-to-be-the-vaccination-stupid/jcr:content/par/blogpost.aspectcrop.868x455.lt.jpg/x1598055738172.jpg.pagespeed.ic.WPm0htSOxE.jpg\"\r\n                            title=\"Contemplative Reptile\"\r\n                            />\r\n                            <CardContent>\r\n                                <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n                                    VACCINATION\r\n                                </Typography>\r\n                            </CardContent>\r\n                        </Card>\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={4}>\r\n                        <Card className={classes.root}>\r\n                            <CardMedia\r\n                            className={classes.media}\r\n                            image=\"https://www.sheppardhealthlaw.com/wp-content/uploads/sites/25/2020/11/Global-Trade-Blog-Image_Covid-2-660x283-1.png\"\r\n                            title=\"Contemplative Reptile\"\r\n                            />\r\n                            <CardContent>\r\n                                <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n                                    OTHERS\r\n                                </Typography>\r\n                            </CardContent>\r\n                        </Card>\r\n                    </Grid>\r\n                </Grid>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Home\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport {BrowserRouter} from \"react-router-dom\"\r\n\r\nimport App from './Home';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport BookingForm from './components/BookingForm';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <BrowserRouter>\r\n      <App />\r\n    </BrowserRouter>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}