{"version":3,"sources":["components/TextError.js","components/BookingForm.js","App.js","reportWebVitals.js","index.js"],"names":["TextError","props","className","children","initialValues","name","idNumber","sampleMode","slot","id","mobileNumber","gender","address","emailID","dob","age","wardNumber","nagarNigam","location","onSubmit","values","onSubmitProps","console","log","resetForm","alert","validationSchema","Yup","required","when","is","then","matches","otherwise","nullable","email","positive","integer","min","max","test","val","toString","length","sampleOptions","key","value","idOptions","genderOptions","nnOptions","BookingForm","click","style","backgroundColor","color","formik","field","map","option","type","checked","errors","component","width","Select","inputProps","MenuItem","TextField","variant","label","form","placeholderText","maxDate","Date","showYearDropdown","dropdownMode","selected","onChange","setFieldValue","now","InputProps","startAdornment","InputAdornment","position","placeholder","Box","margin","Button","marginRight","disabled","isValid","onClick","useStyles","makeStyles","root","maxWidth","media","height","App","classes","useState","setForm","handleClick","alignItems","flexDirection","alignContent","display","justifyContent","fontSize","textAlign","paddingLeft","Grid","container","spacing","item","xs","sm","Card","CardMedia","image","title","CardContent","Typography","gutterBottom","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.784d3ce3.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nfunction TextError(props) {\r\n    return (\r\n        <div className=\"error\">\r\n            {props.children}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TextError\r\n","import React from 'react';\r\nimport {Box, Button, FormControl, FormControlLabel, InputAdornment, InputLabel, MenuItem, Radio} from \"@material-ui/core\"\r\nimport { ErrorMessage, Field, Formik, Form } from \"formik\";\r\nimport {RadioGroup, Select, TextField} from \"formik-material-ui\";\r\nimport {DatePicker} from \"formik-material-ui-pickers\";\r\nimport * as Yup from \"yup\";\r\nimport DateView from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\n\r\nimport \"../App.css\";\r\nimport TextError from \"./TextError\";\r\n\r\nconst initialValues = {\r\n    name: \"\",\r\n    idNumber: \"\",\r\n    sampleMode: \"\",\r\n    slot: \"\",\r\n    id: \"\",\r\n    mobileNumber: \"\",\r\n    gender: \"\",\r\n    address: \"\",\r\n    emailID: \"\",\r\n    dob: null,\r\n    age: 0,\r\n    wardNumber: \"\",\r\n    nagarNigam: \"\",\r\n    location: \"\",\r\n};\r\nconst onSubmit = (values, onSubmitProps) => {\r\n    // getLocation();\r\n    console.log(values);\r\n    onSubmitProps.resetForm();\r\n    alert(\"Form Submitted\");\r\n};\r\n// const validate = values => {\r\n//     let errors = {};\r\n//     if (!values.name) errors.name = \"Required\";\r\n//     if (!values.idNumber) errors.idNumber = \"Required\";\r\n//     if (!values.id) errors.id =  \"Required\";\r\n//     return errors;\r\n// };\r\nconst validationSchema = Yup.object({\r\n    id: Yup.string().required(\"Required\"),\r\n    idNumber: Yup.string().required(\"Required\").when(\"id\", {\r\n        is: \"aadhar\",\r\n        then: Yup.string().matches(/^[2-9]{1}[0-9]{3}\\s?[0-9]{4}\\s?[0-9]{4}$/, \"Must be 12 digits\"),\r\n        otherwise: Yup.string().matches(/^[A-PR-WYa-pr-wy][1-9]\\d\\s?\\d{4}[1-9]$/, \"Invalid format\")\r\n    }),\r\n    name: Yup.string().required(\"Required\"),\r\n    slot: Yup.string().required(\"Required\"),\r\n    gender: Yup.string().required(\"Required\"),\r\n    nagarNigam: Yup.string().required(\"Required\"),\r\n    address: Yup.string().required(\"Required\"),\r\n    sampleMode: Yup.string().required(\"Required\"),\r\n    dob: Yup.date().required(\"Required\").nullable(),\r\n    emailID: Yup.string().email(\"Invalid email format\").required(\"Required\"),\r\n    wardNumber: Yup.number().positive().integer().min(10).max(999),\r\n    mobileNumber: Yup.number().required(\"Required\").test(\"len\", \"Must be 10 digits\", val => val && val.toString().length === 10)\r\n});\r\nconst sampleOptions = [\r\n    {key: \"Home Collection\", value: \"home\"},\r\n    {key: \"Drive-in\", value: \"drive\"}\r\n];\r\nconst idOptions = [\r\n    {key: \"Aadhar Card\", value: \"aadhar\"},\r\n    {key: \"Passport\", value: \"passport\"}\r\n];\r\nconst genderOptions = [\r\n    {key: \"MALE\", value: \"male\"},\r\n    {key: \"FEMALE\", value: \"female\"},\r\n    {key: \"OTHERS\", value: \"other\"}\r\n]\r\nconst nnOptions = [\r\n    {key: \"Heritage, Jaipur\", value: \"heritage\"},\r\n    {key: \"Greater, Jaipur\", value: \"greater\"}\r\n]\r\n\r\nfunction getLocation() {\r\n    if (navigator.geolocation) {\r\n      navigator.geolocation.watchPosition(showPosition);\r\n    } else { \r\n      initialValues.location = \"Geolocation is not supported by this browser.\";\r\n    }\r\n  }\r\n      \r\nfunction showPosition(position) {\r\n    initialValues.location =\"Latitude: \" + position.coords.latitude + \r\n    \"Longitude: \" + position.coords.longitude;\r\n}\r\n// function getLocation() {\r\n//     function success(position) {\r\n//         const latitude  = position.coords.latitude;\r\n//         const longitude = position.coords.longitude;\r\n//         var mapLink = `Latitude: ${latitude} °, Longitude: ${longitude} °`;\r\n//         return mapLink;\r\n//     }\r\n//     function error() {\r\n//         return \"User denied location permission\";\r\n//     }\r\n//     initialValues.location = navigator.geoLocation.getCurrentPosition(success, error);\r\n// };\r\n// if (window.navigator.geolocation) getLocation();\r\n\r\nfunction BookingForm({click}) {\r\n    return (\r\n        <>\r\n        <div style={{backgroundColor:\"darkBlue\", color:\"white\"}}>\r\n            <h2>Please fill all the details</h2>\r\n        </div>\r\n        <Formik className=\"Apps\" initialValues={initialValues} validationSchema={validationSchema} onSubmit={onSubmit}>\r\n            {(formik) => (\r\n                <Form>\r\n                    {/* <Field component={DatePicker} label=\"label\" name=\"name\" /> */}\r\n                    <div className=\"form-control\">\r\n                        <label>Mode of Sample Collection:</label>\r\n                        <Field name=\"sampleMode\">\r\n                            {({field}) => {\r\n                                return sampleOptions.map(option => (\r\n                                    // <FormControlLabel key={option.value} value={option.value} control={<Radio />} label={option.key} />\r\n                                    <>\r\n                                        <input type=\"radio\" id={option.value} {...field} value={option.value} checked={field.value === option.value} />\r\n                                        <label>{option.key}</label>\r\n                                    </>\r\n                                ))\r\n                            }}\r\n                        </Field>\r\n                        <div className=\"error\">\r\n\r\n                        {formik.values.age < 65 && formik.values.sampleMode === \"home\" ? formik.errors.sampleMode = \"Must be 65 years or above\" : \"\"}\r\n                        </div>\r\n                        <ErrorMessage component={TextError} name=\"sampleMode\" />\r\n                    </div>\r\n                    <div className=\"form-control\">\r\n                        <label>Slot Availability:</label>\r\n                        Available for the next day-\r\n                        <Field width={200} component={Select} name=\"slot\" inputProps={{id: \"slot\"}} >\r\n                            <MenuItem value=\"\">Select an MenuItem</MenuItem>\r\n                            <MenuItem value=\"10-10.3\">10:00 - 10:30</MenuItem>\r\n                            <MenuItem value=\"12-12.3\">12:00 - 12:30</MenuItem>\r\n                            <MenuItem value=\"13-13.3\">13:00 - 13:30</MenuItem>\r\n                            <MenuItem value=\"14-14.3\">14:00 - 14:30</MenuItem>\r\n                            <MenuItem value=\"15-15.3\">15:00 - 15:30</MenuItem>\r\n                        </Field>\r\n                        <ErrorMessage component={TextError} name=\"slot\" />\r\n                    </div>\r\n                    <div className=\"form-control\">\r\n                        <label>\r\n                            ID Proof:\r\n                        </label>\r\n                        <Field component={TextField} name=\"id\">\r\n                            {({field}) => {\r\n                                return idOptions.map(option => (\r\n                                    <>\r\n                                        <label>\r\n                                            <input type=\"radio\" id={option.value} {...field} value={option.value} checked={field.value === option.value} />\r\n                                            {option.key}\r\n                                        </label>\r\n                                    </>\r\n                                ))\r\n                            }}\r\n                        </Field>\r\n                        <ErrorMessage component={TextError} name=\"id\" />\r\n                    </div>\r\n                    <div className=\"form-control\">\r\n                        <Field component={TextField} variant=\"outlined\" label=\"ID Proof Number\" type=\"text\" id=\"idNumber\" name=\"idNumber\" />\r\n                    </div>\r\n                    <div className=\"form-control\">\r\n                        <Field component={TextField} variant=\"outlined\" label=\"Name\" type=\"text\" id=\"name\" name=\"name\" />\r\n                    </div>\r\n                    <div className=\"form-control\">\r\n                        <label>Date of Birth:</label>\r\n                        <Field name=\"dob\">\r\n                            {({field, form}) => (\r\n                                <DateView className=\"date\" id=\"dob\" placeholderText=\"Click to select a date\" maxDate={new Date()} showYearDropdown dropdownMode=\"select\" {...field} selected={field.value} onChange={val => {form.setFieldValue(\"dob\", val); form.setFieldValue(\"age\", ~~((Date.now() - +val) / 31557600000))}} />\r\n                            )}\r\n                        </Field>\r\n                        {console.log(formik, \"below date\")}\r\n                        <ErrorMessage component={TextError} name=\"dob\" />\r\n                    </div>\r\n                    <div className=\"form-control\">\r\n                        <label>Gender:</label>\r\n                        <Field component={TextField} name=\"gender\">\r\n                            {({field}) => {\r\n                                return genderOptions.map(option => (\r\n                                    <>\r\n                                        <input type=\"radio\" id={option.value} {...field} value={option.value} checked={field.value === option.value} />\r\n                                        <label>{option.key}</label>\r\n                                    </>\r\n                                ))\r\n                            }}\r\n                        </Field>\r\n                        <ErrorMessage component={TextError} name=\"gender\" />\r\n                    </div>\r\n                    <div className=\"form-control\">\r\n                        <Field className=\"num\" component={TextField} variant=\"outlined\" label=\"Mobile Number\" InputProps={{startAdornment: (<InputAdornment position=\"start\">+91</InputAdornment>)}} type=\"number\" id=\"mobileNumber\" name=\"mobileNumber\" />\r\n                    </div>\r\n                    <div className=\"form-control\">\r\n                        <Field component={TextField} label=\"Email ID\" variant=\"outlined\" type=\"email\" id=\"emailID\" name=\"emailID\" />\r\n                    </div>\r\n                    <div className=\"form-control\">\r\n                        <Field component={TextField} variant=\"outlined\" label=\"Address\" id=\"address\" placeholder=\"House Number, Colony, City with PIN Code\" type=\"text\" name=\"address\" />\r\n                    </div>\r\n                    <div className=\"form-control\">\r\n                        <Field component={TextField} label=\"Ward Number\" variant=\"outlined\" type=\"number\" id=\"wardNumber\" name=\"wardNumber\" />\r\n                    </div>\r\n                    <div className=\"form-control\">\r\n                        <label>Nagar Nigam:</label>\r\n                        <Field component={TextField} name=\"nagarNigam\">\r\n                            {({field}) => {\r\n                                return nnOptions.map(option => (\r\n                                    <>\r\n                                        <input type=\"radio\" id={option.value} {...field} value={option.value} checked={field.value === option.value} />\r\n                                        <label>{option.key}</label>\r\n                                    </>\r\n                                ))\r\n                            }}\r\n                        </Field>\r\n                        <ErrorMessage component={TextError} name=\"nagarNigam\" />\r\n                    </div>\r\n                    {/* <button onClick={getLocation}>Get Location</button> */}\r\n                    <Box margin={2}>\r\n                        <Button style={{marginRight: \"1em\"}} type=\"submit\" variant=\"contained\" color=\"primary\" disabled={!formik.isValid}>\r\n                            Submit\r\n                        </Button>\r\n                        <Button variant=\"contained\" color=\"primary\" onClick={click}>\r\n                            Go Back\r\n                        </Button>\r\n                    </Box>\r\n                </Form>\r\n            )}\r\n        </Formik>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default BookingForm\r\n","import React, { useState, useEffect } from 'react';\nimport axios from \"axios\";\nimport { Box, Container, Grid, Paper, Typography, Card, CardMedia, CardContent, makeStyles, Button } from \"@material-ui/core\";\n\nimport BookingForm from \"./components/BookingForm\";\n\nconst useStyles = makeStyles({\n    root: {\n      maxWidth: 345,\n    },\n    media: {\n      height: 140,\n    },\n  });\n\nfunction App() {\n    const classes = useStyles();\n    const [form, setForm] = useState(false);\n    const [loggedIn, setLoggedIn] = useState(\"\");\n\n    function handleClick() {\n        setForm(!form);\n    }\n\n    return (\n        <>\n        {form ? <BookingForm click={handleClick} /> : <>\n            {/* <Box bgcolor=\"darkBlue\" color=\"white\" display=\"flex\" flexDirection=\"row-reverse\">{loggedIn ? \"Dashboard\" : \"Log In\"}</Box> */}\n            <div style={{alignItems:\"center\", flexDirection:\"column\", alignContent:\"space-between\", backgroundColor: \"darkBlue\", height: \"50vh\", display:\"flex\", justifyContent:\"center\", width: \"100vw\"}}>\n                <h1 style={{color:\"white\", fontSize:\"2em\", textAlign:\"center\"}}>\n                    SHYAM NAGAR VIKAS SAMITI COVID HELP SERVICES\n                </h1>\n                <Button variant=\"contained\" onClick={handleClick} >BOOK NOW</Button>                    \n            </div>\n            <div style={{paddingLeft: \"2em\"}}>\n                <h3>Services offered like:</h3>\n                <Grid container spacing={3}>\n                    <Grid item xs={12} sm={4}>\n                        <Card className={classes.root}>\n                            <CardMedia\n                            className={classes.media}\n                            image=\"https://images.cnbctv18.com/wp-content/uploads/2021/02/COVID19test_swab-768x432.jpg\"\n                            title=\"Contemplative Reptile\"\n                            />\n                            <CardContent>\n                                <Typography gutterBottom variant=\"h5\" component=\"h2\">\n                                    RT-PCR TEST\n                                </Typography>\n                            </CardContent>\n                        </Card>\n                    </Grid>\n                    <Grid item xs={12} sm={4}>\n                        <Card className={classes.root}>\n                            <CardMedia\n                            className={classes.media}\n                            image=\"https://wwwassets.rand.org/content/rand/blog/2020/08/its-going-to-be-the-vaccination-stupid/jcr:content/par/blogpost.aspectcrop.868x455.lt.jpg/x1598055738172.jpg.pagespeed.ic.WPm0htSOxE.jpg\"\n                            title=\"Contemplative Reptile\"\n                            />\n                            <CardContent>\n                                <Typography gutterBottom variant=\"h5\" component=\"h2\">\n                                    VACCINATION\n                                </Typography>\n                            </CardContent>\n                        </Card>\n                    </Grid>\n                    <Grid item xs={12} sm={4}>\n                        <Card className={classes.root}>\n                            <CardMedia\n                            className={classes.media}\n                            image=\"https://www.sheppardhealthlaw.com/wp-content/uploads/sites/25/2020/11/Global-Trade-Blog-Image_Covid-2-660x283-1.png\"\n                            title=\"Contemplative Reptile\"\n                            />\n                            <CardContent>\n                                <Typography gutterBottom variant=\"h5\" component=\"h2\">\n                                    OTHERS\n                                </Typography>\n                            </CardContent>\n                        </Card>\n                    </Grid>\n                </Grid>\n            </div>\n            </>}\n        </>\n    )\n}\n\nexport default App\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport BookingForm from './components/BookingForm';\n\nReactDOM.render(\n  <React.StrictMode>\n      <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}